/// <reference types="node" />
import net from 'net';
import Packet from './Packet';
declare class TCPSocket {
    socket: net.Socket;
    isConnected: boolean;
    private buffer;
    constructor(socket: net.Socket);
    static connect(host: string, port: number, timeout: number): Promise<TCPSocket>;
    readByte(): Promise<number>;
    readBytes(length: number): Promise<number[]>;
    readVarInt(): Promise<number>;
    readString(): Promise<string>;
    readShort(): Promise<number>;
    readInt(): Promise<number>;
    readIntLE(): Promise<number>;
    readLong(): Promise<number>;
    writeByte(value: number): Promise<void>;
    writeBytes(buffer: Buffer): Promise<void>;
    writePacket(packet: Packet, prefixLength: boolean): Promise<void>;
    destroy(): Promise<void>;
}
export default TCPSocket;
